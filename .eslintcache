[{"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\index.js":"1","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\App.js":"2","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reportWebVitals.js":"3","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\GameRoom.js":"4","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\MainPage.js":"5","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\CombinedReducer.js":"6","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\UserReducer\\UserReducer.js":"7","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\ChessBoard\\ChessBoard.js":"8","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Header.js":"9","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\GameOnList.js":"10","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\LoginPage.js":"11","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\UserActions.js":"12","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\MatchHistory.js":"13","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\GameOnHistoryList.js":"14","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\MatchHistoryGame.js":"15","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\validationSchemas\\LoginSchema.js":"16","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\RegisterPage.js":"17","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\validationSchemas\\RegisterSchema.js":"18","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameHubReducer\\GameHubReducer.js":"19","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\middleware\\WebSocketMiddleware.js":"20","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\ChessBoardReducer\\ChessBoardReducer.js":"21","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\GameHubActions.js":"22","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GamePlayersReducer\\GamePlayersReducer.js":"23","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameTurnReducer\\GameTurnReducer.js":"24","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\ChessBoardActions.js":"25","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\GameTurnActions.js":"26","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameTimersReducer\\GameTimersReducer.js":"27","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\GameTimersActions.js":"28","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameWinnerReducer\\GameWinnerReducer.js":"29","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\NewGameModal.js":"30","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\PersonLookup.js":"31","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\PersonOnList.js":"32","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\FriendPanel.js":"33","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\FriendOnList.js":"34","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\NavigationHelper\\PrivateRoute.js":"35","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\HistoryFeed.js":"36","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\SingleOnFeed.js":"37","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\RequestOnList.js":"38","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\EventCommunicationReducer\\EventCommunicationReducer.js":"39","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\EventCommunicationActions.js":"40","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\WinnerModal.js":"41","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\LoginErrorModal.js":"42","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\RegisterModal.js":"43","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\RegisterErrorModal.js":"44"},{"size":1046,"mtime":1611843504082,"results":"45","hashOfConfig":"46"},{"size":3021,"mtime":1612964218619,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":4551,"mtime":1613511797190,"results":"49","hashOfConfig":"46"},{"size":3270,"mtime":1613560215064,"results":"50","hashOfConfig":"46"},{"size":985,"mtime":1613312756136,"results":"51","hashOfConfig":"46"},{"size":462,"mtime":1611754707182,"results":"52","hashOfConfig":"46"},{"size":7700,"mtime":1613748001681,"results":"53","hashOfConfig":"46"},{"size":5869,"mtime":1613561552810,"results":"54","hashOfConfig":"46"},{"size":2216,"mtime":1613555224808,"results":"55","hashOfConfig":"46"},{"size":3740,"mtime":1613384564260,"results":"56","hashOfConfig":"46"},{"size":208,"mtime":1610721738806,"results":"57","hashOfConfig":"46"},{"size":1889,"mtime":1613560183347,"results":"58","hashOfConfig":"46"},{"size":1474,"mtime":1613555930478,"results":"59","hashOfConfig":"46"},{"size":5772,"mtime":1613512171874,"results":"60","hashOfConfig":"46"},{"size":388,"mtime":1611582665466,"results":"61","hashOfConfig":"46"},{"size":5244,"mtime":1613392899635,"results":"62","hashOfConfig":"46"},{"size":446,"mtime":1613739909317,"results":"63","hashOfConfig":"46"},{"size":247,"mtime":1611849418228,"results":"64","hashOfConfig":"46"},{"size":3903,"mtime":1613313256918,"results":"65","hashOfConfig":"46"},{"size":244,"mtime":1611847567797,"results":"66","hashOfConfig":"46"},{"size":306,"mtime":1611851225074,"results":"67","hashOfConfig":"46"},{"size":249,"mtime":1611849405387,"results":"68","hashOfConfig":"46"},{"size":240,"mtime":1611849456814,"results":"69","hashOfConfig":"46"},{"size":302,"mtime":1611850194221,"results":"70","hashOfConfig":"46"},{"size":118,"mtime":1611849354916,"results":"71","hashOfConfig":"46"},{"size":246,"mtime":1612019653334,"results":"72","hashOfConfig":"46"},{"size":126,"mtime":1612019686753,"results":"73","hashOfConfig":"46"},{"size":246,"mtime":1612175134694,"results":"74","hashOfConfig":"46"},{"size":2303,"mtime":1613553449798,"results":"75","hashOfConfig":"46"},{"size":1145,"mtime":1613311112792,"results":"76","hashOfConfig":"46"},{"size":1469,"mtime":1613311056137,"results":"77","hashOfConfig":"46"},{"size":3470,"mtime":1613233366538,"results":"78","hashOfConfig":"46"},{"size":1591,"mtime":1613233708251,"results":"79","hashOfConfig":"46"},{"size":592,"mtime":1612962367980,"results":"80","hashOfConfig":"46"},{"size":3279,"mtime":1613561197640,"results":"81","hashOfConfig":"46"},{"size":2762,"mtime":1613381626568,"results":"82","hashOfConfig":"46"},{"size":1660,"mtime":1613234142737,"results":"83","hashOfConfig":"46"},{"size":259,"mtime":1613314556895,"results":"84","hashOfConfig":"46"},{"size":116,"mtime":1613312681168,"results":"85","hashOfConfig":"46"},{"size":1567,"mtime":1613384378450,"results":"86","hashOfConfig":"46"},{"size":1094,"mtime":1613384574277,"results":"87","hashOfConfig":"46"},{"size":1101,"mtime":1613392653950,"results":"88","hashOfConfig":"46"},{"size":1091,"mtime":1613392855149,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"fi8ays",{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"92"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"92"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"92"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"92"},"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\index.js",[],["200","201"],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\App.js",["202","203","204","205","206"],"import './App.css';\nimport './style/style.css';\nimport MainPage from './components/MainPage';\nimport GameRoom from './components/GameRoom';\nimport ChessBoard from './components/ChessBoard/ChessBoard';\nimport Header from './components/Header';\nimport LoginPage from './components/LoginPage';\nimport RegisterPage from './components/RegisterPage';\nimport MatchHistory from './components/MatchHistory';\nimport MatchHistoryGame from './components/MatchHistoryGame';\nimport {BrowserRouter as Router, Switch, Route, Redirect, useLocation} from 'react-router-dom';\nimport axios from 'axios';\nimport { user_log_in, user_log_out } from './actions/UserActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport PersonLookup from './components/PersonLookup';\nimport FriendPanel from './components/FriendPanel';\nimport HistoryFeed from './components/HistoryFeed';\nimport PrivateRoute from './components/NavigationHelper/PrivateRoute';\n\nglobal.BACKEND = \"http://localhost:51463\";\n\n\nconst App = () => {\n  \n  \n\n  // let originalSet = localStorage.setItem;\n  // localStorage.setItem = function(key, value) {\n  //   var event = new Event('itemSet');\n  //   event.value = value;\n  //   event.key = key;\n  //   originalSet.apply(this, arguments);\n  //   document.dispatchEvent(event);\n  // };\n  const isLogged = useSelector(state => state.logged_in); \n  const dispatch = useDispatch();\n  window.addEventListener(\"storage\",()=>{IsLoggedIn()},false);\n  window.onstorage = ()=>{IsLoggedIn()};\n  \n  useEffect(() => {\n    IsLoggedIn();\n  }, [])\n  const IsLoggedIn = () =>{\n    axios.get(global.BACKEND + \"/user\",{\n      headers:{\n        \"Authorization\" : \"Bearer \" + window.localStorage.getItem(\"access_token\")\n      }\n    })\n    .then((response)=>{\n      console.log(response.data)\n      let username = response.data.username;\n      window.localStorage.setItem(\"username\", username);\n\n      dispatch(user_log_in());\n    }).catch((error)=>{\n        window.localStorage.removeItem(\"access_token\");\n        window.localStorage.removeItem(\"username\");\n        dispatch(user_log_out());\n    })\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route path=\"/login\" exact component={LoginPage}/>\n          <Route path=\"/register\" exact component={RegisterPage}/>\n          <PrivateRoute path=\"/\" exact component={MainPage}/>\n          <PrivateRoute path=\"/gameRoom/:gameRoomID\" exact component={GameRoom}/>\n          <PrivateRoute path=\"/test\" exact component={ChessBoard}/>\n          <PrivateRoute path=\"/matchhistory\" exact component={MatchHistory}/>\n          <PrivateRoute path=\"/matchhistory/game/:gameID\" exact component={MatchHistoryGame}/>\n          <PrivateRoute path=\"/lookup/\" exact component={PersonLookup}/>\n          <PrivateRoute path=\"/friends/\" exact component={FriendPanel}/>\n          <PrivateRoute path=\"/feed/\" exact component={HistoryFeed}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reportWebVitals.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\GameRoom.js",["207","208","209","210","211","212","213"],"import axios from 'axios'\r\nimport { useEffect, useState } from 'react';\r\nimport * as signalr from '@aspnet/signalr';\r\nimport ChessBoard from './ChessBoard/ChessBoard';\r\nimport { hub_join_group} from '../actions/GameHubActions';\r\nimport { make_a_move } from '../actions/ChessBoardActions';\r\nimport { set_game_turn } from '../actions/GameTurnActions';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport WinnerModal from './Modals/WinnerModal';\r\n\r\n\r\nconst GameRoom = (props) => {\r\n  const unserializedChessBoard = useSelector(state => state.chessBoard);\r\n  const players = useSelector(state => state.gamePlayers);\r\n  const playersTurn = useSelector(state => state.gameTurn); \r\n  const dispatch = useDispatch();\r\n  \r\n  const ticking = useSelector(state => state.gameTimers.ticking);\r\n  const gameTimersWhite = useSelector(state => state.gameTimers.whiteTime);\r\n  const gameTimersBlack = useSelector(state => state.gameTimers.blackTime);\r\n  const winner = useSelector(state => state.gameWinner);\r\n  const [whiteTime, setWhiteTime] = useState(30);\r\n  const [blackTime, setBlackTime] = useState(30);\r\n  const [isWinnerModalOpen,setIsWinnerModalOpen] = useState(false);\r\n  const [winnerName, setWinnerName] = useState(\"\");\r\n\r\n  \r\n    useEffect(() => {\r\n      if(ticking == \"White\"){\r\n        const intervalWhite = setInterval(() => {\r\n          setWhiteTime(whiteTime => whiteTime>0?whiteTime - 1: whiteTime);\r\n        }, 1000);\r\n        return () => clearInterval(intervalWhite);\r\n      }\r\n      else if(ticking == \"Black\"){\r\n        const intervalBlack = setInterval(() => {\r\n          setBlackTime(blackTime => blackTime>0?blackTime - 1:blackTime);\r\n        }, 1000);\r\n        return () => clearInterval(intervalBlack);\r\n      }\r\n      return;\r\n    }, [ticking]);\r\n\r\n    useEffect(() => {\r\n      setWhiteTime(gameTimersWhite);\r\n      setBlackTime(gameTimersBlack);\r\n    },[ticking,gameTimersWhite, gameTimersBlack])\r\n\r\n    useEffect(() => {\r\n    },[whiteTime, blackTime])\r\n\r\n    useEffect(() => {\r\n      if(winner != \"\" && winner != null){\r\n        setIsWinnerModalOpen(true);\r\n        console.log(winner.winner)\r\n        setWinnerName(winner.winner);\r\n      }\r\n    }, [winner])\r\n\r\n\r\n  useEffect(()=>{\r\n    dispatch(set_game_turn(\"\"))\r\n      dispatch(hub_join_group(props.match.params.gameRoomID));\r\n  },[])\r\n\r\n  const onMakeAMove = (moveString) => {\r\n    dispatch(make_a_move(props.match.params.gameRoomID, moveString));\r\n  }\r\n\r\n  const getPlayerTurnFromMove = (moveString) =>\r\n  {\r\n    let startMove = moveString.substring(0,2);\r\n    let finalMove = moveString.substring(3,5);\r\n    let startStringPos = positionToStringPosition(startMove);\r\n    let finalStringPos = positionToStringPosition(finalMove);\r\n\r\n    return [startStringPos, finalStringPos];\r\n  }\r\n\r\n  const positionToStringPosition = (positionString) => {\r\n    let column = positionString[0].toUpperCase().charCodeAt(0) - 64;\r\n    let row = parseInt(positionString[1],10);\r\n    return [column,row];\r\n  }\r\n\r\n  String.prototype.replaceAt = function(index, replacement) {\r\n    return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n  }\r\n\r\n  const saveGame = () => {\r\n    axios.post(global.BACKEND+\"/userGames/\",{    \r\n      \"gameID\" : parseInt(props.match.params.gameRoomID)        \r\n    },{\r\n        headers:{\r\n            \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n        }\r\n    }).then((response)=>{\r\n    }).catch((err)=>{\r\n        console.log(err);\r\n    })  \r\n  }\r\n\r\n    return(\r\n        <>\r\n            <div className={\"gameroom\"}>\r\n              <ChessBoard serializedPassedBoard={unserializedChessBoard}\r\n                          onMakeAMove={onMakeAMove}\r\n                          playerOne={players.p1? players.p1: \"no player joined\"}\r\n                          playerOneTime={whiteTime}\r\n                          playerTwo={players.p2? players.p2: \"no player joined\"}\r\n                          playerTwoTime={blackTime}\r\n                          lastTurnMove={playersTurn?getPlayerTurnFromMove(playersTurn): [[],[]]}\r\n                          reverse={localStorage.getItem(\"username\")==players.p2?true:false}\r\n                          />\r\n            </div>\r\n            <button onClick={()=>{saveGame()}}>Save game</button>\r\n            <WinnerModal \r\n            open={isWinnerModalOpen} \r\n            onClose={()=>{setIsWinnerModalOpen(false)}}\r\n            winnerName={winnerName}\r\n            gameID={props.match.params.gameRoomID}\r\n            />\r\n        </>\r\n    )\r\n} \r\n\r\nexport default GameRoom;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\MainPage.js",["214","215","216","217","218","219"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {GameOnList} from './GameOnList';\r\nimport NewGameModal from \"./Modals/NewGameModal\";\r\nimport RegisterModal from \"./Modals/RegisterModal\";\r\n\r\nconst MainPage = () => {\r\n    const [textValue,setTextValue] = useState(window.localStorage.getItem(\"access_token\"));\r\n    const [listOfGames,setListOfGames] = useState([]);\r\n    const [isModalOpen,setIsModalOpen] = useState(false);\r\n    const [isRegisterModalOpen,setIsRegisterModalOpen] = useState(false);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    \r\n      \r\n    \r\n    useEffect(()=>{\r\n        setTimeout(function () {\r\n            axios.get(global.BACKEND + \"/game/getFreeGames\",\r\n            {\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n                }\r\n            })\r\n            .then((response)=>{\r\n                setListOfGames(response.data);\r\n            })\r\n        }, 50);\r\n\r\n        if(location.state != null && location.state.isRegisterModalOpen != null)\r\n            setIsRegisterModalOpen(location.state.isRegisterModalOpen)\r\n    },[])\r\n\r\n    const enterGame = (id) => {\r\n        history.push(\"/gameroom/\"+id);\r\n    }\r\n\r\n    const renderListOfGames = () => {\r\n        let renderedList = [];\r\n        for(let i = 0;i< listOfGames.length; i++){\r\n            let tempId = i;\r\n            renderedList.push(\r\n                <GameOnList key={i}\r\n                 gameID={listOfGames[i].gameID} playerWhite={listOfGames[i].playerWhite} playerBlack={listOfGames[i].playerBlack}\r\n                 gameTime={listOfGames[i].gameTime} timeGain={listOfGames[i].timeGain}/>\r\n                )\r\n        }\r\n        return renderedList;\r\n    }\r\n\r\n    const createNewGame = () =>{\r\n        axios.post(global.BACKEND+\"/game/addGame\",{            \r\n        },{\r\n            headers:{\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n            }\r\n        }).then((response)=>{\r\n            let newGameID = response.data.gameID;\r\n            history.push(\"/gameroom/\"+newGameID);\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        })    \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainPage__header\">\r\n                {/* <h1>This is main page</h1> */}\r\n                {/* <button onClick={()=>{createNewGame()}}>+ New Game</button> */}\r\n                <button onClick={()=>setIsModalOpen(true)}>+ New Game</button>\r\n            </div>\r\n            <div className=\"gameList\">\r\n                <div className=\"gameList__header\">\r\n                    <h1>Games</h1>\r\n                </div>\r\n                <div className=\"gameItems\">\r\n                    {renderListOfGames()}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <NewGameModal open={isModalOpen}\r\n                onClose={()=>setIsModalOpen(false)}>\r\n                    New Modal here\r\n                </NewGameModal>\r\n                <RegisterModal open={isRegisterModalOpen} onClose={()=>{setIsRegisterModalOpen(false)}}/>\r\n            </div>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default MainPage;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\CombinedReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\UserReducer\\UserReducer.js",["220"],"import { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst userReducer = (state = localStorage.getItem(\"access_token\")?true:false\r\n, action) => {\r\n    switch(action.type){\r\n        case \"LOG_OUT\":\r\n            localStorage.setItem(\"access_token\", \"\");\r\n            return state=false;\r\n        case \"LOG_IN\":\r\n            state = action.payload;\r\n            return state=true;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\ChessBoard\\ChessBoard.js",["221","222","223","224","225","226","227","228","229","230","231"],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Header.js",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport {Search, Home, Forum} from \"@material-ui/icons\";\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport {Event, History, Face, SportsKabaddi} from \"@material-ui/icons\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {user_log_out} from '../actions/UserActions';\r\nimport {set_events} from '../actions/EventCommunicationActions';\r\nimport {hub_quit_group} from '../actions/GameHubActions';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\n\r\nconst Header = () => {\r\n    const isLogged = useSelector(state => state.logged_in); \r\n    const events = useSelector(state => state.events); \r\n    const history = useHistory();\r\n    let [location,setLocation] = useState(history.location.pathname.split(\"/\")[1]); \r\n    console.log(location);  \r\n    const dispatch = useDispatch();\r\n\r\n    const changeLocation = (location) =>{\r\n        history.push(location);\r\n        setLocation(history.location.pathname.split(\"/\")[1]);\r\n    }\r\n\r\n    const loc = useLocation();\r\n    useEffect(()=>{\r\n        console.log(\"loaction changed\");\r\n        setLocation(history.location.pathname.split(\"/\")[1]);\r\n        dispatch(hub_quit_group())\r\n        if(location == \"feed\")\r\n            dispatch(set_events(null));\r\n    },[loc]) \r\n\r\n    if(isLogged)\r\n    return (\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header__left\">\r\n                <div className=\"header__input\">\r\n                    {/* <Search/>\r\n                    <input type=\"text\" placeholder=\"Lookup Player\"/> */}\r\n                    <Formik\r\n                initialValues={{ searchInput:'' }}\r\n                validateOnChange={false}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    history.push(\"/lookup?lookupName=\" + values[\"searchInput\"]);\r\n                    setSubmitting(false);\r\n                }}\r\n                >\r\n                {({ isSubmitting, errors }) => (\r\n                    <Form>\r\n                        <Search/>\r\n                        <Field type=\"text\" placeholder=\"Lookup Player\" name=\"searchInput\" id=\"searchInput\"/>\r\n                        {/* <button type=\"submit\" disabled={isSubmitting}>\r\n                            Search\r\n                        </button> */}\r\n                    </Form>\r\n                )}\r\n                </Formik>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <div onClick={()=>{changeLocation(\"/\")}} \r\n                className={location == \"\"||location  == \"login\" || location == \"register\" ?\"header__option header__option--active\": \"header__option\"}>\r\n                    <Home fontSize=\"large\"/>\r\n                    {/* <SportsKabaddi fontSize=\"large\"/> */}\r\n                </div>\r\n                {/* <div onClick={()=>{changeLocation(\"/login\")}}  \r\n                className={location == \"login\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    <Home fontSize=\"large\"/>\r\n                </div>\r\n                <div onClick={()=>{changeLocation(\"/register\")}}\r\n                className={location == \"register\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    <Home fontSize=\"large\"/>\r\n                </div> */}\r\n                <div onClick={()=>{changeLocation(\"/matchhistory\")}} \r\n                className={location == \"matchhistory\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    <History fontSize=\"large\"/>\r\n                </div>\r\n                <div onClick={()=>{changeLocation(\"/friends\")}} \r\n                className={location == \"friends\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    <Face fontSize=\"large\"/>\r\n                </div>\r\n                <div onClick={()=>{changeLocation(\"/feed\")}} \r\n                className={location == \"feed\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    <Event fontSize=\"large\"/>\r\n                    <span className={events != null?\"header__notification\":\"header__notification--hidden\"}>!</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <div className=\"header__info\">\r\n                    <Avatar />\r\n                    <h4>{isLogged?window.localStorage.getItem(\"username\"):\"not logged in\"}</h4>\r\n                    <h4 className={\"header__logout\"} onClick={()=>{dispatch(user_log_out()); history.push(\"/login\")}}>LOGOUT</h4>\r\n                    {/* <IconButton>\r\n                        <Forum/>\r\n                    </IconButton> */}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n    else\r\n    return(\r\n        <div className=\"header\">\r\n\r\n            <div className=\"header__left\">\r\n                <div className=\"header__input\">\r\n                    <Search/>\r\n                    <input type=\"text\" placeholder=\"Lookup Player\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <div onClick={()=>{changeLocation(\"/login\")}}  \r\n                className={location == \"login\"|| location == \"\" || location == \"matchhistory\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    LOGIN\r\n                </div>\r\n                <div onClick={()=>{changeLocation(\"/register\")}}\r\n                className={location == \"register\"?\"header__option header__option--active\": \"header__option\"}>\r\n                    REGISTER\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <div className=\"header__info\">\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\GameOnList.js",["248"],"import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport const GameOnList = ({gameID, playerWhite, playerBlack, onClick, gameTime, timeGain}) => {\r\n    \r\n    const history = useHistory();\r\n    const enterGame = () => {\r\n            axios.post(global.BACKEND + \"/game/joinGame\",{\r\n                \"gameID\": gameID\r\n            }, {\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n                }\r\n            }).then((response)=>{\r\n                history.push(\"/gameroom/\"+gameID)\r\n            }).catch((err)=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n\r\n        const renderLower = () =>{\r\n            console.log(gameTime)\r\n            if(gameTime == null && timeGain == null)return;\r\n            return(\r\n                <div className=\"gameItem__lower\">\r\n                        <span className=\"gameItem__time\">{secToMin(gameTime)} (+{timeGain})</span>                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        const secToMin = (sec) =>{\r\n            if(sec == null) return \"0:00\"\r\n            let minutes = parseInt((sec/60)).toString();\r\n            let seconds = (sec%60).toString();\r\n            seconds = seconds.length == 1? \"0\" + seconds : seconds;\r\n      \r\n            return minutes + \":\" + seconds;\r\n        } \r\n    \r\n    return (\r\n        <>\r\n            {/* <div className=\"gameItem\" onClick={()=>enterGame()}>\r\n                <span className=\"gameItem__gameID\">GameID: {gameID}</span>\r\n                <span className=\"gameItem__playerWhite\">P1: {playerWhite}</span>\r\n                <span className=\"gameItem__playerBlack\">P2: {playerBlack}</span>\r\n            </div>      */}\r\n            <div className=\"gameItem\" onClick={()=>enterGame()}>\r\n                <div className=\"gameItem__upper\">\r\n                    <span className=\"gameItem__playerWhite\">P1: {playerWhite}</span>\r\n                    <span className=\"gameItem__playerBlack\">P2: {playerBlack}</span>                    \r\n                </div>\r\n                {renderLower()}\r\n            </div>     \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameOnList;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\LoginPage.js",["249","250","251"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { user_log_in, user_log_out } from '../actions/UserActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LoginSchema from '../validationSchemas/LoginSchema';\r\nimport { Alarm, AlarmOnTwoTone } from '@material-ui/icons';\r\nimport ErrorModal from './Modals/LoginErrorModal';\r\n\r\n\r\nconst LoginPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [isDataInvalid,setIsDataInvalid] = useState(false);\r\n    const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);\r\n    return (\r\n        <>\r\n        <div className=\"loginPage\">\r\n            <div className=\"loginPage__input\">\r\n                <Formik\r\n                initialValues={{ name:'', password:'' }}\r\n                validationSchema={LoginSchema}\r\n                validateOnChange={false}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    axios.post(global.BACKEND + \"/user/authenticate\", {\r\n                        \"name\": values['name'],\r\n                        \"password\": values['password']\r\n                    }).then((response)=>{\r\n                        setSubmitting(false);\r\n                        let token, username;\r\n                        try{\r\n                            token = response.data.token;\r\n                        }catch{\r\n                            token = \"\";\r\n                        }\r\n                        try{\r\n                            username = response.data.username;\r\n                        }catch{\r\n                            username = \"\";\r\n                        }\r\n                        window.localStorage.setItem(\"access_token\", token);\r\n                        window.localStorage.setItem(\"username\", username);\r\n                        dispatch(user_log_in());\r\n                        history.push('/');\r\n                    }).catch((error)=>{\r\n                        try{\r\n                            window.localStorage.removeItem(\"access_token\");\r\n                            window.localStorage.removeItem(\"username\");\r\n                            dispatch(user_log_out());\r\n                        }catch{}\r\n                        //alert(\"Your login credentials don't match our data\");\r\n                        setIsErrorModalOpen(true);\r\n                        setSubmitting(false);\r\n                        setIsDataInvalid(true);\r\n                    })\r\n                }}\r\n                >\r\n                {({ isSubmitting, errors }) => (\r\n                    <Form className=\"loginPage__form\" \r\n                    onChange={()=>{setIsDataInvalid(false)}}>\r\n                        <Field type=\"text\" placeholder=\"Name\" name=\"name\" id=\"name\"/>\r\n                        <Field type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\"/>\r\n                        <ErrorMessage name=\"name\" component=\"div\" />\r\n                        <ErrorMessage name=\"password\" component=\"div\" />\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Log in\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n                </Formik>\r\n                {/* <span className=\"loginPage__forgotten\">Forgot Password?</span> */}\r\n            </div>\r\n            <hr/>\r\n            <button onClick={()=>{history.push(\"/register\")}}\r\n            className=\"loginPage__CreateButton\">Create New Account</button>\r\n        </div>\r\n        <ErrorModal open={isErrorModalOpen} onClose={()=>{setIsErrorModalOpen(false)}}/>\r\n        </>\r\n    )}\r\n\r\nexport default LoginPage\r\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\UserActions.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\MatchHistory.js",["252","253"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {GameOnHistoryList} from './GameOnHistoryList';\r\n\r\nconst MatchHistory = () => {\r\n    const [listOfGames,setListOfGames] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        axios.get(global.BACKEND + \"/game/getMatchHistory\",\r\n        {\r\n            headers:{\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n            }\r\n        })\r\n        .then((response)=>{\r\n            console.log(response);\r\n            setListOfGames(response.data);\r\n        })\r\n        // axios.get(global.BACKEND + \"/userGames/\",\r\n        // {\r\n        //     headers:{\r\n        //         \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n        //     }\r\n        // })\r\n        // .then((response)=>{\r\n        //     console.log(response);\r\n        //     setListOfGames(response.data);\r\n        // })\r\n    },[])\r\n\r\n    const renderListOfGames = () => {\r\n        let renderedList = [];\r\n        for(let i = 0;i< listOfGames.length; i++){\r\n            let tempId = i;\r\n            renderedList.push(\r\n                <GameOnHistoryList key={i}\r\n                 gameID={listOfGames[i].gameID} playerWhite={listOfGames[i].playerWhite} \r\n                 playerBlack={listOfGames[i].playerBlack} date={listOfGames[i].date}/>\r\n                )\r\n        }\r\n        return renderedList;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gameList gameList__history\">\r\n                <div className=\"gameList__header\">\r\n                    <h1>Match history</h1>\r\n                </div>\r\n                <div className=\"gameItems\">\r\n                    {renderListOfGames()}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default MatchHistory;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\GameOnHistoryList.js",["254","255"],"import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport const GameOnHistoryList = ({gameID, playerWhite, playerBlack, onClick, date}) => {\r\n    \r\n    const history = useHistory();\r\n    const enterGame = () => {\r\n            history.push(\"/MatchHistory/game/\"+gameID)\r\n        }\r\n\r\n    const formatDate = (date) => {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear(),\r\n            hour = d.getHours(),\r\n            minute = d.getMinutes().toString().length == 1? \"0\" + d.getMinutes(): d.getMinutes();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-') + \" \" + hour + \":\" + minute ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gameItem\" onClick={()=>enterGame()}>\r\n                <div className=\"gameItem__upper\">\r\n                    <span className=\"gameItem__playerWhite\">P1: {playerWhite}</span>\r\n                    <span className=\"gameItem__playerBlack\">P2: {playerBlack}</span>                    \r\n                </div>\r\n                <div className=\"gameItem__lower\">\r\n                    <span className=\"gameItem__time\">{formatDate(date)}</span>\r\n                </div>\r\n            </div>     \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameOnHistoryList;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\MatchHistoryGame.js",["256","257","258","259","260","261"],"import axios from 'axios'\r\nimport { useEffect, useState } from 'react';\r\nimport * as signalr from '@aspnet/signalr';\r\nimport ChessBoard from './ChessBoard/ChessBoard';\r\nimport { useSelector } from 'react-redux';\r\nimport WinnerModal from './Modals/WinnerModal';\r\n\r\n\r\nconst MatchHistoryGame = (props) => {\r\n  \r\n    let [serializedBoard,setSerializedBoard] = useState(\"RNBQKBNRPPPPPPPP00000000000000000000000000000000pppppppprnbqkbnr\");\r\n    let gameID = props.match.params.gameID;\r\n    let [piecesTaken,setPiecesTaken] = useState(\"\");\r\n    let [currentMoveStep, setCurrentMoveStep] = useState(0);\r\n    let [movesList, setMovesList] = useState(0);\r\n    let [playersTurn, setPlayersTurn] = useState(\"\");\r\n    let [reverse, setReverse] = useState(false);\r\n    let [isWinnerModalOpen, setIsWinnerModalOpen] = useState(false);\r\n    let [players ,setPlayers] = useState([]);\r\n    let [winnerName, setWinnerName] = useState(\"\");\r\n\r\n    const replayMove = (moveString) => {\r\n        let startMove = moveString.substring(0,2);\r\n        let finalMove = moveString.substring(3,5);\r\n        let startStringPos = positionToStringPosition(startMove);\r\n        let finalStringPos = positionToStringPosition(finalMove);\r\n        setPiecesTaken(piecesTaken + serializedBoard[finalStringPos]);\r\n        setSerializedBoard(serializedBoard.replaceAt(finalStringPos, serializedBoard[startStringPos]).replaceAt(startStringPos, '0'));\r\n        // setSerializedBoard(serializedBoard.replaceAt(startStringPos, '0'));\r\n    }\r\n\r\n    const undoMove = (moveString) => {\r\n        let startMove = moveString.substring(0,2);\r\n        let finalMove = moveString.substring(3,5);\r\n        let startStringPos = positionToStringPosition(startMove);\r\n        let finalStringPos = positionToStringPosition(finalMove);\r\n        setSerializedBoard(serializedBoard.replaceAt(startStringPos, serializedBoard[finalStringPos]).replaceAt(finalStringPos, piecesTaken[piecesTaken.length-1]));\r\n        setPiecesTaken(piecesTaken.substring(0,piecesTaken.length-1));\r\n    }\r\n\r\n    String.prototype.replaceAt = function(index, replacement) {\r\n        return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n    }\r\n\r\n    const positionToStringPosition = (positionString) => {\r\n        let column = positionString[0].toUpperCase().charCodeAt(0) - 64;\r\n        let row = parseInt(positionString[1],10);\r\n        let columnValue = (1 * column) - 1;\r\n        let rowValue = (8 * row) - 8;\r\n        return columnValue+rowValue;\r\n    }\r\n\r\n    const nextMove = () =>{\r\n        if(currentMoveStep >= movesList.length-1){\r\n            endMatch();\r\n            return ;\r\n        }\r\n\r\n        replayMove(movesList[currentMoveStep]);\r\n        setPlayersTurn(getPlayerTurnFromMove(movesList[currentMoveStep]))\r\n        setCurrentMoveStep(currentMoveStep+1);\r\n\r\n        if(currentMoveStep >= movesList.length-2)endMatch();\r\n    }\r\n\r\n    const prevMove = () =>{\r\n        if(currentMoveStep <= 0) return;\r\n\r\n        undoMove(movesList[currentMoveStep-1]);\r\n        if(currentMoveStep-2 >= 0)\r\n            setPlayersTurn(getPlayerTurnFromMove(movesList[currentMoveStep-2]))\r\n        else\r\n            setPlayersTurn([[],[]])\r\n        setCurrentMoveStep(currentMoveStep-1);\r\n    }\r\n\r\n    const getPlayerTurnFromMove = (moveString) =>\r\n    {\r\n        let startMove = moveString.substring(0,2);\r\n        let finalMove = moveString.substring(3,5);\r\n        let startStringPos = moveStringToPosition(startMove);\r\n        let finalStringPos = moveStringToPosition(finalMove);\r\n\r\n        return [startStringPos, finalStringPos];\r\n    }\r\n\r\n    const moveStringToPosition = (positionString) => {\r\n        let column = positionString[0].toUpperCase().charCodeAt(0) - 64;\r\n        let row = parseInt(positionString[1],10);\r\n        return [column,row];\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        axios.get(global.BACKEND + \"/game/getGame/\" + gameID)\r\n        .then((response)=>{\r\n            console.log(response.data)\r\n            setPlayers([response.data.playerWhite, response.data.playerBlack]);\r\n            setMovesList(response.data.movesList.split(\";\"));\r\n            if(response.data.playerBlack == localStorage.getItem(\"username\"))setReverse(true);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    },[])\r\n\r\n    const onRewatch = () =>{\r\n        setIsWinnerModalOpen(false);\r\n        setCurrentMoveStep(0);\r\n        setSerializedBoard(\"RNBQKBNRPPPPPPPP00000000000000000000000000000000pppppppprnbqkbnr\");\r\n        setPlayersTurn(\"\");\r\n    }\r\n\r\n    const endMatch = () => {\r\n        setIsWinnerModalOpen(true);\r\n        if(currentMoveStep % 2 == 0) setWinnerName(players[1]);\r\n        else setWinnerName(players[0]);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className={\"gameroom\"}>\r\n              <ChessBoard serializedPassedBoard={serializedBoard}\r\n                          lastTurnMove={playersTurn?playersTurn: [[],[]]}\r\n                          playerOne={players[0]}\r\n                          playerTwo={players[1]}              \r\n                          reverse={reverse}\r\n                          isReplay={true}\r\n                          next={nextMove}\r\n                          previous={prevMove}\r\n                          step={currentMoveStep}\r\n                          />\r\n            </div>\r\n            {/* <div>\r\n                <button onClick={()=>{prevMove()}}>prev</button>\r\n                <button onClick={()=>{nextMove()}}>next</button>\r\n            </div> */}\r\n            <WinnerModal \r\n            open={isWinnerModalOpen}\r\n            onClose={()=>{setIsWinnerModalOpen(false)}}\r\n            winnerName={winnerName}\r\n            gameID={gameID}\r\n            onRewatch={onRewatch}/>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default MatchHistoryGame;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\validationSchemas\\LoginSchema.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\RegisterPage.js",["262"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { user_log_in, user_log_out } from '../actions/UserActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport RegisterSchema from '../validationSchemas/RegisterSchema';\r\nimport ErrorModal from './Modals/RegisterErrorModal';\r\n\r\n\r\nconst RegisterPage = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [isDataInvalid,setIsDataInvalid] = useState(false);\r\n    const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"registerPage\">\r\n            <div className=\"registerPage__input\">\r\n                <Formik\r\n                initialValues={{ name:'', password:'' }}\r\n                validationSchema={RegisterSchema}\r\n                validateOnChange={false}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    axios.post(global.BACKEND + \"/user/register\", {\r\n                        \"name\": values['name'],\r\n                        \"password\": values['password']\r\n                    }).then((response)=>{\r\n\r\n                        //Account created\r\n                        // alert(\"Account successfully created\");\r\n\r\n                        axios.post(global.BACKEND + \"/user/authenticate\", {\r\n                            \"name\": values['name'],\r\n                            \"password\": values['password']\r\n                        })\r\n                        .then((response) => {\r\n                            setSubmitting(false);\r\n                            let token, username;\r\n                            try{\r\n                                token = response.data.token;\r\n                            }catch{\r\n                                token = \"\";\r\n                            }\r\n                            try{\r\n                                username = response.data.username;\r\n                            }catch{\r\n                                username = \"\";\r\n                            }\r\n                            window.localStorage.setItem(\"access_token\", token);\r\n                            window.localStorage.setItem(\"username\", username);\r\n                            dispatch(user_log_in());\r\n                            // history.push('/');\r\n                            history.push({\r\n                                pathname: '/',\r\n                                state: {\r\n                                    isRegisterModalOpen: true\r\n                                }\r\n                            })\r\n                        }).catch((error)=>{\r\n                            try{\r\n                                window.localStorage.removeItem(\"access_token\");\r\n                                window.localStorage.removeItem(\"username\");\r\n                                dispatch(user_log_out());\r\n                            }catch{}\r\n                            alert(\"Your register credentials don't match our data\");\r\n                            setSubmitting(false);\r\n                            setIsDataInvalid(true);\r\n                        })\r\n                    }).catch((error)=>{\r\n                        try{\r\n                            window.localStorage.removeItem(\"access_token\");\r\n                            window.localStorage.removeItem(\"username\");\r\n                            dispatch(user_log_out());\r\n                        }catch{}\r\n                        // alert(\"Your register credentials don't match our data\");\r\n                        setIsErrorModalOpen(true);\r\n                        setSubmitting(false);\r\n                        setIsDataInvalid(true);\r\n                    })\r\n                }}\r\n                >\r\n                {({ isSubmitting, errors }) => (\r\n                    <Form className=\"registerPage__form\" \r\n                    onChange={()=>{setIsDataInvalid(false)}}>\r\n                        <Field type=\"text\" placeholder=\"Name\" name=\"name\" id=\"name\"/>\r\n                        <Field type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\"/>\r\n                        <Field type=\"password\" placeholder=\"PasswordConfirmation\" name=\"passwordConfirmation\" id=\"passwordConfirmation\"/>\r\n                        <ErrorMessage name=\"name\" component=\"div\" />\r\n                        <ErrorMessage name=\"password\" component=\"div\" />\r\n                        <ErrorMessage name=\"passwordConfirmation\" component=\"div\" />\r\n                        {/* <button type=\"submit\" disabled={isSubmitting}>\r\n                            Log in\r\n                        </button> */}\r\n                        <button type=\"submit\" disabled={isSubmitting}\r\n                        className=\"registerPage__CreateButton\">\r\n                            Create Account\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n                </Formik>\r\n                {/* <span className=\"registerPage__forgotten\">Forgot Password?</span> */}\r\n            </div>\r\n            <ErrorModal open={isErrorModalOpen} onClose={()=>{setIsErrorModalOpen(false)}}/>\r\n        </div>\r\n\r\n    )}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\validationSchemas\\RegisterSchema.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameHubReducer\\GameHubReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\middleware\\WebSocketMiddleware.js",["263","264","265","266","267","268","269"],"import * as SignalR from '@aspnet/signalr';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const WebsocketMiddleware = (store) =>{\r\n    console.log(global.BACKEND)\r\n    let socket = setupSocket(store);\r\n\r\n\r\n    return function(next) {\r\n        console.log(\"NEXT: \" + next);\r\n        \r\n        return function(action){\r\n            //Can switch it to switch later\r\n            if(action.type == \"HUB_SEND_MESSAGE\"){\r\n                socket.invoke(\"SendMessageToAll\", action.payload).catch((e) =>{\r\n                    return console.log(e);\r\n                });\r\n            }\r\n            if(action.type == \"HUB_JOIN_GROUP\"){\r\n                socket.invoke(\"JoinGameGroup\", action.payload).catch(e => {\r\n                    console.error(e.toString());\r\n                    let retryConnection = setTimeout(() => {\r\n                        let connectionSuccess = false;\r\n                        console.log(\"trying again to connect to signalR\");\r\n                        socket.invoke(\"JoinGameGroup\", action.payload).then(()=>{\r\n                            connectionSuccess = true;\r\n                        }).catch(e => {\r\n                            console.log(\"trying to connect...\");\r\n                        });\r\n                        if(connectionSuccess)\r\n                            clearTimeout(retryConnection);\r\n                    },1000)\r\n                });\r\n            }\r\n            if(action.type == \"HUB_QUIT_GROUP\"){\r\n                console.log(\"quit_groups\");\r\n                socket.invoke(\"QuitGroups\").catch(e => {\r\n                    return console.error(e.toString());\r\n                });\r\n            }\r\n            if(action.type == \"MAKE_A_MOVE\"){\r\n                // console.log(\"group: \"+ action.group + \" , moveString: \" + action.payload)\r\n                socket.invoke(\"SendMessageToGroup\",action.group , action.payload)\r\n                .then(()=>\r\n                {\r\n                    console.log(\"Send to :\"+ action.group + \" ,a message:\" + action.payload );\r\n                })\r\n                .catch((err)=>{\r\n                    console.log(err);\r\n                })                \r\n            }\r\n            if(action.type == \"LOG_OUT\" || action.type == \"LOG_IN\"){\r\n                socket = setupSocket(store)\r\n            }\r\n\r\n            next(action);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst setupSocket = (store) => {\r\n    let socket = new SignalR.HubConnectionBuilder()\r\n    .withUrl(global.BACKEND + \"/GameHub\", {\r\n        accessTokenFactory: () => window.localStorage.getItem(\"access_token\")\r\n        })\r\n    .build();\r\n    \r\n    socket.on(\"ReceiveMessage\", (message)=>{\r\n        console.log(message);\r\n    })\r\n\r\n    socket.on(\"ReceiveWinner\", (winner)=>{\r\n        console.log(winner);\r\n        store.dispatch({\r\n            type: \"SET_GAME_WINNER\",\r\n            payload: winner\r\n        })\r\n    })\r\n\r\n    socket.on(\"ReceiveBoard\", (serializedBoard) => {\r\n        store.dispatch({\r\n            type: \"SET_CHESSBOARD\",\r\n            payload: serializedBoard\r\n        });\r\n      })\r\n\r\n    socket.on(\"ReceivePlayers\", (players) => {\r\n        store.dispatch({\r\n            type: \"SET_GAME_PLAYERS\",\r\n            payload: players\r\n        });\r\n    })\r\n\r\n    socket.on(\"ReceiveTurn\", (turn) => {\r\n        console.log(turn);\r\n        store.dispatch({\r\n            type: \"SET_GAME_TURN\",\r\n            payload: turn.lastTurnMove\r\n        })\r\n    })\r\n\r\n    socket.on(\"ReceiveTime\", (timers) => {\r\n        console.log(timers)\r\n        store.dispatch({\r\n            type: \"SET_GAME_TIMERS\",\r\n            payload: timers\r\n        })\r\n    })\r\n\r\n    socket.on(\"ReceiveEvent\", (eventData) => {\r\n        console.log(eventData);\r\n        store.dispatch({\r\n            type: \"SET_EVENTS\",\r\n            payload: eventData\r\n        })\r\n    })\r\n\r\n    socket.start().catch(function(err){\r\n        return console.error(err.toString());\r\n    });\r\n\r\n    return socket;\r\n}","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\ChessBoardReducer\\ChessBoardReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\GameHubActions.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GamePlayersReducer\\GamePlayersReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameTurnReducer\\GameTurnReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\ChessBoardActions.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\GameTurnActions.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameTimersReducer\\GameTimersReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\GameTimersActions.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\GameWinnerReducer\\GameWinnerReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\NewGameModal.js",["270"],"import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NewGameModal = ({open, children, onClose}) => {\r\n    const history = useHistory();\r\n    if(!open) return null\r\n\r\n    return (\r\n        <>\r\n          <div className={\"newGameModal__overlay\"}/>\r\n          <div className={\"newGameModal\"}>\r\n              <span className=\"newGameModal__close\" onClick={onClose}>\r\n                  <span className=\"newGameModal__closeButton\"> \r\n                      X\r\n                    </span>\r\n                </span>    \r\n              <div className={\"newGameModal__form\"}>\r\n              <Formik\r\n                initialValues={{ gameTime:'', timeGain:'' }}\r\n                validateOnChange={false}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    axios.post(global.BACKEND + \"/game/addCustomGame\", {\r\n                        \"gameTime\": parseInt(values['gameTime']),\r\n                        \"timeGain\": parseInt(values['timeGain'])\r\n                    }, {\r\n                        headers:{\r\n                            \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n                        }\r\n                    }).then((response)=>{\r\n                        setSubmitting(false);\r\n                        let newGameID = response.data.gameID;\r\n                        history.push(\"/gameroom/\"+newGameID);\r\n                    }).catch((error)=>{\r\n                        alert(\"Use numbers to indicate time\");\r\n                        setSubmitting(false);\r\n                    })\r\n                }}\r\n                >\r\n                {({ isSubmitting, errors }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" placeholder=\"Starting Time (s)\" name=\"gameTime\" id=\"gameTime\"/>\r\n                        <Field type=\"text\" placeholder=\"Time Gain (s)\" name=\"timeGain\" id=\"timeGain\"/>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Create\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n                </Formik>\r\n              </div>\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\nexport default NewGameModal","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\PersonLookup.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\PersonOnList.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\FriendPanel.js",["271","272"],"import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport RequestOnList from './RequestOnList';\r\nimport FriendOnList from './FriendOnList';\r\n\r\nconst FriendPanel = (props) => {\r\n    const [listOfRequests, setListOfRequests] = useState([]);\r\n    const [listOfFriends, setListOfFriends] = useState([]);\r\n    const [isRequests, setIsRequests] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        setTimeout(function () {\r\n            //Get requests\r\n            axios.get(global.BACKEND + \"/friend/getFriendRequests/\",\r\n            {\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n                }\r\n            })\r\n            .then((response)=>{\r\n                setListOfRequests(response.data);\r\n            })\r\n\r\n            //Get friends\r\n            axios.get(global.BACKEND + \"/friend/getFriends/\",\r\n            {\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n                }\r\n            })\r\n            .then((response)=>{\r\n                setListOfFriends(response.data);\r\n            })\r\n        }, 50);\r\n    },[props])\r\n\r\n    const renderRequests = (listOfFriends) => {\r\n        let renderedList = [];\r\n        for(let i = 0; i < listOfFriends.length; i++){\r\n            renderedList.push(\r\n                <RequestOnList name={listOfFriends[i].name} userID={listOfFriends[i].userID}/>\r\n            )\r\n        }\r\n\r\n        if(renderedList.length < 1){\r\n            renderedList.push(\r\n                <div className=\"friendPanel__noone\">\r\n                    You have no new friend requests\r\n                </div>\r\n            )\r\n        }\r\n        return renderedList;\r\n    }\r\n\r\n    const renderFriends = (listOfFriends) => {\r\n        let renderedList = [];\r\n        for(let i = 0; i < listOfFriends.length; i++){\r\n            renderedList.push(\r\n                <FriendOnList name={listOfFriends[i].name} userID={listOfFriends[i].userID} game={listOfFriends[i].gameID}/>\r\n            )\r\n        }\r\n\r\n        if(renderedList.length < 1){\r\n            renderedList.push(\r\n                <div className=\"friendPanel__noone\">\r\n                    You have no friends added\r\n                </div>\r\n            )\r\n        }\r\n        return renderedList;\r\n    }\r\n\r\n    const handleCheckbox = (e) => {\r\n        if(isRequests == false)setIsRequests(true);\r\n        else setIsRequests(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"friendPanel\">\r\n            <header className=\"friendPanel__upper\">\r\n                <button className={(isRequests?\"friendPanel__button--active friendPanel__button\":\" friendPanel__button\")  + \" friendPanel__button--left\"}\r\n                onClick={()=>{setIsRequests(true)}}>\r\n                    Requests\r\n                </button>\r\n                <button className={(!isRequests?\"friendPanel__button--active friendPanel__button\":\" friendPanel__button\") + \" friendPanel__button--right\"}\r\n                onClick={()=>{setIsRequests(false)}}>\r\n                    Friends\r\n                </button>\r\n            </header>\r\n            <div className=\"firendPanel__lower\">\r\n                {isRequests?renderRequests(listOfRequests):renderFriends(listOfFriends)} \r\n            </div>\r\n            {/* <input type=\"checkbox\" checked={isRequests} onChange={(e) => {handleCheckbox(e)}}/> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendPanel;\r\n\r\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\FriendOnList.js",["273","274"],"import axios from 'axios'\r\nimport React from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst PersonOnList = ({name, game, userID}) => {\r\n    let history = useHistory();\r\n\r\n    const AddFriend = (friendID) => {\r\n        axios.post(global.BACKEND + \"/friend/addFriend\", {\r\n            \"userID\": friendID,\r\n        }, {\r\n            headers:{\r\n                \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n            }\r\n        }).then((response)=>{\r\n            alert(\"Successfully sent request\")\r\n        }).catch((error)=>{\r\n            alert(\"Something failed when trying to add him to friends\");\r\n        })\r\n    }\r\n\r\n    const renderButton = () =>{\r\n        if(game == null)\r\n        return (\r\n            <button className=\"friend__button--disabled\">\r\n                Spectate\r\n            </button>\r\n        )\r\n        return (\r\n            <button onClick={()=>{if(game)history.push(\"/gameroom/\"+game)}}>\r\n                Spectate\r\n            </button>\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"friend\">\r\n            <div className=\"friend__upper\">\r\n                <div className=\"friend__identification\">\r\n                <Avatar/>\r\n                <span className=\"friend__name\">\r\n                    {name} \r\n                </span>\r\n                </div>\r\n                <span className=\"friend__spectate\">\r\n                {renderButton()}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonOnList\r\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\NavigationHelper\\PrivateRoute.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\HistoryFeed.js",["275","276","277","278","279","280","281","282","283"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { string } from \"yup\";\r\nimport {GameOnList} from './GameOnList';\r\nimport NewGameModal from \"./Modals/NewGameModal\";\r\nimport SingleOnFeed from \"./SingleOnFeed\";\r\n\r\nconst MainPage = () => {\r\n    const [textValue,setTextValue] = useState(window.localStorage.getItem(\"access_token\"));\r\n    const [historyList,setHistoryList] = useState([]);\r\n    const history = useHistory();\r\n\r\n    \r\n      \r\n    \r\n    useEffect(()=>{\r\n        setTimeout(function () {\r\n            axios.get(global.BACKEND + \"/friend/historyFeed\",\r\n            {\r\n                headers:{\r\n                    \"Authorization\": \"Bearer \" + window.localStorage.getItem(\"access_token\")\r\n                }\r\n            })\r\n            .then((response)=>{\r\n                setHistoryList(response.data);\r\n            })\r\n        }, 50);\r\n    },[])\r\n\r\n    const renderFeed = () =>{\r\n        let history = [];\r\n        for(let i = 0; i < historyList.length; i++){\r\n            history.push(\r\n                // <div className=\"historyFeed__card\">\r\n                //     {renderSingle(historyList[i])}\r\n                // </div>\r\n                <SingleOnFeed key={i}\r\n                              feedData={historyList[i]}\r\n                              onClickRewatch={()=>{goRewatch(historyList[i].gameID)}}\r\n                              onClickSpectate={()=>{goSpectate(historyList[i].gameID)}}/>\r\n            )\r\n        }\r\n        return history;\r\n    }\r\n\r\n    const goRewatch = (gameID) => {\r\n        history.push(\"/matchHistory/game/\" + gameID);\r\n    }\r\n\r\n    const goSpectate = (gameID) => {\r\n        history.push(\"/gameroom/\" + gameID);\r\n    }\r\n\r\n    const renderSingle = (singleFeed) =>{\r\n        let eventTime = singleFeed.eventTime;\r\n        let gameID = singleFeed.gameID;\r\n        let isStartEvent = singleFeed.isStartEvent;\r\n        let playerWhite = singleFeed.playerWhite;\r\n        let playerBlack = singleFeed.playerBlack;\r\n        let wonBy = singleFeed.wonBy;\r\n        let isGameLive = singleFeed.isGameLive;\r\n\r\n        let elementToRender;\r\n        if(isStartEvent){\r\n            elementToRender = (\r\n                <div onClick={()=>{if(isGameLive)history.push(\"/gameroom/\"+gameID)}}>\r\n                    The {playerWhite} has started a match against {playerBlack}\r\n                </div>\r\n            )\r\n        }else{\r\n            if(wonBy == playerWhite)\r\n            elementToRender = (\r\n                <div onClick={()=>{history.push(\"/MatchHistory/game/\"+gameID)}}>\r\n                    The {playerWhite} has beaten {playerBlack}\r\n                </div>\r\n            )\r\n            else if(wonBy == playerBlack)\r\n            elementToRender = (\r\n                <div onClick={()=>history.push(\"/MatchHistory/game/\"+gameID)}>\r\n                    The {playerBlack} has beaten {playerWhite}\r\n                </div>\r\n            )\r\n        }\r\n        return elementToRender;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <h2>Friends History Feed</h2> */}\r\n            {/* <SingleOnFeed feedData={historyList[0]}/> */}\r\n            {/* <div className=\"historyFeed__space\"/> */}\r\n            {renderFeed()}\r\n        </>\r\n    )\r\n} \r\n\r\nexport default MainPage;","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\SingleOnFeed.js",["284","285","286","287","288","289","290","291","292","293","294"],"import { RssFeedTwoTone } from \"@material-ui/icons\";\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\n\r\nconst SingleOnFeed = ({feedData , onClickSpectate, onClickRewatch}) => {\r\n    \r\n    let playerWhite = feedData != null? feedData.playerWhite : null;\r\n    let playerBlack = feedData != null? feedData.playerBlack : null;\r\n    let wonBy = feedData != null? feedData.wonBy : null;\r\n    let isGameLive = feedData != null? feedData.isGameLive : null;\r\n    let eventTime = feedData != null? new Date(feedData.eventTime) : null;\r\n\r\n    const formatDate = (date) => {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear(),\r\n            hour = d.getHours(),\r\n            minute = d.getMinutes().toString().length == 1? \"0\" + d.getMinutes(): d.getMinutes();\r\n    \r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-') + \" \" + hour + \":\" + minute ;\r\n    }\r\n\r\n    const renderButton = () => {\r\n        if(wonBy == null || wonBy == \"\")\r\n        return (\r\n            <button className={!isGameLive?\"historyFeed__button--disabled\":\"\"}\r\n            onClick={()=>{if(onClickSpectate != null && isGameLive)onClickSpectate()}}>Spectate</button>\r\n        )\r\n        \r\n        return(\r\n            <button onClick={()=>{if(onClickRewatch != null && wonBy != null && wonBy != \"\")onClickRewatch()}}>Rewatch</button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"historyFeed__card\">\r\n            <div className=\"historyFeed__card__upper\">\r\n                <div className=\"historyFeed__playerOne\">\r\n                    <Avatar/>\r\n                    <span className=\"historyFeed__playerTwo__name\">\r\n                        {playerWhite} \r\n                    </span>\r\n                </div>\r\n                <div className=\"historyFeed__playerTwo\">\r\n                    <Avatar/>\r\n                    <span className={(wonBy==playerBlack?\"historyFeed__winner \":\" \") +(\"historyFeed__playerTwo__name \")}>\r\n                        {playerBlack} \r\n                    </span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"historyFeed__card__lower\">\r\n                <span className=\"historyFeed__date\">\r\n                    {wonBy == null || wonBy == \"\"?\"Started on:\":\"Ended on:\"} \r\n                    <br/>\r\n                    {formatDate(eventTime)}\r\n                </span>\r\n                {renderButton()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleOnFeed\r\n","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\RequestOnList.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\reducers\\EventCommunicationReducer\\EventCommunicationReducer.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\actions\\EventCommunicationActions.js",[],"C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\WinnerModal.js",["295","296","297","298","299"],"import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst WinnerModal = ({open, winnerName, onClose, gameID, onRewatch}) => {\r\n    const history = useHistory();\r\n    if(!open) return null\r\n\r\n    const Rewatch = () =>{\r\n        console.log(onRewatch == null)\r\n        if(onRewatch==null)\r\n            history.push(\"/matchHistory/game/\" + gameID)\r\n        else\r\n            onRewatch();\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <div className={\"newGameModal__overlay\"}/>\r\n          <div className={\"newGameModal\"}>\r\n              <span className=\"newGameModal__close\" onClick={onClose}>\r\n                  <span className=\"newGameModal__closeButton\"> \r\n                      X\r\n                    </span>\r\n                </span>    \r\n                <span className=\"winnerModal__name\">THE WINNER IS <br/> \r\n                    <span className=\"winnerModal__winner\">{winnerName}</span>\r\n                </span>\r\n                <div className=\"winnerModal__buttons\">\r\n                    <button className=\"winnerModal__rewatch\"\r\n                            onClick={()=>{Rewatch()}}>\r\n                                Rewatch\r\n                    </button>\r\n                    <button className=\"winnerModal__quit\" \r\n                            onClick={()=>{history.push(\"/\")}}>\r\n                                Quit\r\n                    </button>\r\n                </div>\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\nexport default WinnerModal","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\LoginErrorModal.js",["300","301","302","303","304","305"],"import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst WinnerModal = ({open, onClose}) => {\r\n    const history = useHistory();\r\n    if(!open) return null\r\n\r\n    return (\r\n        <>\r\n          <div className={\"newGameModal__overlay\"}/>\r\n          <div className={\"newGameModal\"}>\r\n              <span className=\"newGameModal__close\" onClick={onClose}>\r\n                  <span className=\"newGameModal__closeButton\"> \r\n                      X\r\n                    </span>\r\n                </span>    \r\n                <span className=\"winnerModal__name\">\r\n                    Your login credentials don't match our data\r\n                </span>\r\n                <div className=\"winnerModal__buttons\">\r\n                    <button className=\"winnerModal__rewatch\"\r\n                            onClick={onClose}>\r\n                                OK\r\n                    </button>\r\n\r\n                </div>\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\nexport default WinnerModal","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\RegisterModal.js",["306","307","308","309","310","311"],"import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst RegisterModal = ({open, onClose}) => {\r\n    const history = useHistory();\r\n    if(!open) return null\r\n\r\n    return (\r\n        <>\r\n          <div className={\"newGameModal__overlay\"}/>\r\n          <div className={\"newGameModal\"}>\r\n              <span className=\"newGameModal__close\" onClick={onClose}>\r\n                  <span className=\"newGameModal__closeButton\"> \r\n                      X\r\n                    </span>\r\n                </span>    \r\n                <span className=\"winnerModal__name\">\r\n                    You have successfully created an account\r\n                </span>\r\n                <div className=\"winnerModal__buttons\">\r\n                    <button className=\"winnerModal__rewatch\"\r\n                            onClick={onClose}>\r\n                                Continue\r\n                    </button>\r\n\r\n                </div>\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\nexport default RegisterModal","C:\\Users\\RAMAND\\Desktop\\chessFront\\chessf\\src\\components\\Modals\\RegisterErrorModal.js",["312","313","314","315","316","317"],"import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst RegisterErrorModal = ({open, onClose}) => {\r\n    const history = useHistory();\r\n    if(!open) return null\r\n\r\n    return (\r\n        <>\r\n          <div className={\"newGameModal__overlay\"}/>\r\n          <div className={\"newGameModal\"}>\r\n              <span className=\"newGameModal__close\" onClick={onClose}>\r\n                  <span className=\"newGameModal__closeButton\"> \r\n                      X\r\n                    </span>\r\n                </span>    \r\n                <span className=\"winnerModal__name\">\r\n                    Account name already taken\r\n                </span>\r\n                <div className=\"winnerModal__buttons\">\r\n                    <button className=\"winnerModal__rewatch\"\r\n                            onClick={onClose}>\r\n                                OK\r\n                    </button>\r\n\r\n                </div>\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\nexport default RegisterErrorModal",{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":11,"column":49,"nodeType":"324","messageId":"325","endLine":11,"endColumn":57},{"ruleId":"322","severity":1,"message":"326","line":11,"column":59,"nodeType":"324","messageId":"325","endLine":11,"endColumn":70},{"ruleId":"322","severity":1,"message":"327","line":15,"column":21,"nodeType":"324","messageId":"325","endLine":15,"endColumn":29},{"ruleId":"322","severity":1,"message":"328","line":36,"column":9,"nodeType":"324","messageId":"325","endLine":36,"endColumn":17},{"ruleId":"329","severity":1,"message":"330","line":43,"column":6,"nodeType":"331","endLine":43,"endColumn":8,"suggestions":"332"},{"ruleId":"322","severity":1,"message":"333","line":3,"column":13,"nodeType":"324","messageId":"325","endLine":3,"endColumn":20},{"ruleId":"334","severity":1,"message":"335","line":29,"column":18,"nodeType":"336","messageId":"337","endLine":29,"endColumn":20},{"ruleId":"334","severity":1,"message":"335","line":35,"column":23,"nodeType":"336","messageId":"337","endLine":35,"endColumn":25},{"ruleId":"334","severity":1,"message":"338","line":53,"column":17,"nodeType":"336","messageId":"337","endLine":53,"endColumn":19},{"ruleId":"329","severity":1,"message":"339","line":64,"column":5,"nodeType":"331","endLine":64,"endColumn":7,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":86,"column":3,"nodeType":"343","messageId":"337","endLine":88,"endColumn":4},{"ruleId":"334","severity":1,"message":"335","line":113,"column":68,"nodeType":"336","messageId":"337","endLine":113,"endColumn":70},{"ruleId":"322","severity":1,"message":"344","line":9,"column":12,"nodeType":"324","messageId":"325","endLine":9,"endColumn":21},{"ruleId":"322","severity":1,"message":"345","line":9,"column":22,"nodeType":"324","messageId":"325","endLine":9,"endColumn":34},{"ruleId":"329","severity":1,"message":"346","line":33,"column":7,"nodeType":"331","endLine":33,"endColumn":9,"suggestions":"347"},{"ruleId":"322","severity":1,"message":"348","line":35,"column":11,"nodeType":"324","messageId":"325","endLine":35,"endColumn":20},{"ruleId":"322","severity":1,"message":"349","line":42,"column":17,"nodeType":"324","messageId":"325","endLine":42,"endColumn":23},{"ruleId":"322","severity":1,"message":"350","line":52,"column":11,"nodeType":"324","messageId":"325","endLine":52,"endColumn":24},{"ruleId":"322","severity":1,"message":"351","line":1,"column":10,"nodeType":"324","messageId":"325","endLine":1,"endColumn":20},{"ruleId":"322","severity":1,"message":"352","line":1,"column":10,"nodeType":"324","messageId":"325","endLine":1,"endColumn":21},{"ruleId":"322","severity":1,"message":"353","line":2,"column":8,"nodeType":"324","messageId":"325","endLine":2,"endColumn":13},{"ruleId":"322","severity":1,"message":"351","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":20},{"ruleId":"334","severity":1,"message":"338","line":94,"column":35,"nodeType":"336","messageId":"337","endLine":94,"endColumn":37},{"ruleId":"334","severity":1,"message":"335","line":103,"column":32,"nodeType":"336","messageId":"337","endLine":103,"endColumn":34},{"ruleId":"334","severity":1,"message":"335","line":103,"column":67,"nodeType":"336","messageId":"337","endLine":103,"endColumn":69},{"ruleId":"334","severity":1,"message":"335","line":110,"column":30,"nodeType":"336","messageId":"337","endLine":110,"endColumn":32},{"ruleId":"334","severity":1,"message":"335","line":110,"column":62,"nodeType":"336","messageId":"337","endLine":110,"endColumn":64},{"ruleId":"334","severity":1,"message":"335","line":110,"column":93,"nodeType":"336","messageId":"337","endLine":110,"endColumn":95},{"ruleId":"334","severity":1,"message":"335","line":110,"column":125,"nodeType":"336","messageId":"337","endLine":110,"endColumn":127},{"ruleId":"334","severity":1,"message":"335","line":183,"column":32,"nodeType":"336","messageId":"337","endLine":183,"endColumn":34},{"ruleId":"322","severity":1,"message":"354","line":3,"column":23,"nodeType":"324","messageId":"325","endLine":3,"endColumn":28},{"ruleId":"322","severity":1,"message":"355","line":4,"column":17,"nodeType":"324","messageId":"325","endLine":4,"endColumn":27},{"ruleId":"322","severity":1,"message":"356","line":5,"column":31,"nodeType":"324","messageId":"325","endLine":5,"endColumn":44},{"ruleId":"322","severity":1,"message":"357","line":10,"column":31,"nodeType":"324","messageId":"325","endLine":10,"endColumn":43},{"ruleId":"334","severity":1,"message":"335","line":31,"column":21,"nodeType":"336","messageId":"337","endLine":31,"endColumn":23},{"ruleId":"329","severity":1,"message":"358","line":33,"column":7,"nodeType":"331","endLine":33,"endColumn":12,"suggestions":"359"},{"ruleId":"334","severity":1,"message":"335","line":66,"column":37,"nodeType":"336","messageId":"337","endLine":66,"endColumn":39},{"ruleId":"334","severity":1,"message":"335","line":66,"column":54,"nodeType":"336","messageId":"337","endLine":66,"endColumn":56},{"ruleId":"334","severity":1,"message":"335","line":66,"column":77,"nodeType":"336","messageId":"337","endLine":66,"endColumn":79},{"ruleId":"334","severity":1,"message":"335","line":79,"column":37,"nodeType":"336","messageId":"337","endLine":79,"endColumn":39},{"ruleId":"334","severity":1,"message":"335","line":83,"column":37,"nodeType":"336","messageId":"337","endLine":83,"endColumn":39},{"ruleId":"334","severity":1,"message":"335","line":87,"column":37,"nodeType":"336","messageId":"337","endLine":87,"endColumn":39},{"ruleId":"334","severity":1,"message":"335","line":119,"column":37,"nodeType":"336","messageId":"337","endLine":119,"endColumn":39},{"ruleId":"334","severity":1,"message":"335","line":119,"column":59,"nodeType":"336","messageId":"337","endLine":119,"endColumn":61},{"ruleId":"334","severity":1,"message":"335","line":119,"column":77,"nodeType":"336","messageId":"337","endLine":119,"endColumn":79},{"ruleId":"334","severity":1,"message":"335","line":123,"column":37,"nodeType":"336","messageId":"337","endLine":123,"endColumn":39},{"ruleId":"334","severity":1,"message":"335","line":36,"column":38,"nodeType":"336","messageId":"337","endLine":36,"endColumn":40},{"ruleId":"322","severity":1,"message":"360","line":8,"column":10,"nodeType":"324","messageId":"325","endLine":8,"endColumn":15},{"ruleId":"322","severity":1,"message":"361","line":8,"column":17,"nodeType":"324","messageId":"325","endLine":8,"endColumn":31},{"ruleId":"322","severity":1,"message":"362","line":15,"column":12,"nodeType":"324","messageId":"325","endLine":15,"endColumn":25},{"ruleId":"322","severity":1,"message":"363","line":8,"column":11,"nodeType":"324","messageId":"325","endLine":8,"endColumn":18},{"ruleId":"322","severity":1,"message":"349","line":36,"column":17,"nodeType":"324","messageId":"325","endLine":36,"endColumn":23},{"ruleId":"322","severity":1,"message":"353","line":3,"column":8,"nodeType":"324","messageId":"325","endLine":3,"endColumn":13},{"ruleId":"334","severity":1,"message":"335","line":18,"column":55,"nodeType":"336","messageId":"337","endLine":18,"endColumn":57},{"ruleId":"322","severity":1,"message":"333","line":3,"column":13,"nodeType":"324","messageId":"325","endLine":3,"endColumn":20},{"ruleId":"322","severity":1,"message":"364","line":5,"column":10,"nodeType":"324","messageId":"325","endLine":5,"endColumn":21},{"ruleId":"341","severity":1,"message":"342","line":41,"column":5,"nodeType":"343","messageId":"337","endLine":43,"endColumn":6},{"ruleId":"334","severity":1,"message":"335","line":100,"column":42,"nodeType":"336","messageId":"337","endLine":100,"endColumn":44},{"ruleId":"329","severity":1,"message":"365","line":104,"column":7,"nodeType":"331","endLine":104,"endColumn":9,"suggestions":"366"},{"ruleId":"334","severity":1,"message":"335","line":115,"column":32,"nodeType":"336","messageId":"337","endLine":115,"endColumn":34},{"ruleId":"322","severity":1,"message":"362","line":14,"column":12,"nodeType":"324","messageId":"325","endLine":14,"endColumn":25},{"ruleId":"322","severity":1,"message":"367","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":21},{"ruleId":"334","severity":1,"message":"335","line":14,"column":28,"nodeType":"336","messageId":"337","endLine":14,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":19,"column":28,"nodeType":"336","messageId":"337","endLine":19,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":35,"column":28,"nodeType":"336","messageId":"337","endLine":35,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":41,"column":28,"nodeType":"336","messageId":"337","endLine":41,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":52,"column":28,"nodeType":"336","messageId":"337","endLine":52,"endColumn":30},{"ruleId":"334","severity":1,"message":"335","line":52,"column":56,"nodeType":"336","messageId":"337","endLine":52,"endColumn":58},{"ruleId":"322","severity":1,"message":"357","line":2,"column":31,"nodeType":"324","messageId":"325","endLine":2,"endColumn":43},{"ruleId":"322","severity":1,"message":"368","line":73,"column":11,"nodeType":"324","messageId":"325","endLine":73,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":74,"column":23,"nodeType":"336","messageId":"337","endLine":74,"endColumn":25},{"ruleId":"322","severity":1,"message":"326","line":3,"column":22,"nodeType":"324","messageId":"325","endLine":3,"endColumn":33},{"ruleId":"322","severity":1,"message":"369","line":11,"column":11,"nodeType":"324","messageId":"325","endLine":11,"endColumn":20},{"ruleId":"322","severity":1,"message":"370","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":16},{"ruleId":"322","severity":1,"message":"371","line":5,"column":9,"nodeType":"324","messageId":"325","endLine":5,"endColumn":19},{"ruleId":"322","severity":1,"message":"372","line":6,"column":8,"nodeType":"324","messageId":"325","endLine":6,"endColumn":20},{"ruleId":"322","severity":1,"message":"344","line":10,"column":12,"nodeType":"324","messageId":"325","endLine":10,"endColumn":21},{"ruleId":"322","severity":1,"message":"345","line":10,"column":22,"nodeType":"324","messageId":"325","endLine":10,"endColumn":34},{"ruleId":"322","severity":1,"message":"373","line":55,"column":11,"nodeType":"324","messageId":"325","endLine":55,"endColumn":23},{"ruleId":"322","severity":1,"message":"374","line":56,"column":13,"nodeType":"324","messageId":"325","endLine":56,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":72,"column":22,"nodeType":"336","messageId":"337","endLine":72,"endColumn":24},{"ruleId":"334","severity":1,"message":"335","line":78,"column":27,"nodeType":"336","messageId":"337","endLine":78,"endColumn":29},{"ruleId":"322","severity":1,"message":"375","line":1,"column":10,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"353","line":2,"column":8,"nodeType":"324","messageId":"325","endLine":2,"endColumn":13},{"ruleId":"322","severity":1,"message":"376","line":3,"column":17,"nodeType":"324","messageId":"325","endLine":3,"endColumn":26},{"ruleId":"322","severity":1,"message":"327","line":3,"column":28,"nodeType":"324","messageId":"325","endLine":3,"endColumn":36},{"ruleId":"322","severity":1,"message":"351","line":4,"column":10,"nodeType":"324","messageId":"325","endLine":4,"endColumn":20},{"ruleId":"322","severity":1,"message":"326","line":4,"column":22,"nodeType":"324","messageId":"325","endLine":4,"endColumn":33},{"ruleId":"334","severity":1,"message":"335","line":22,"column":55,"nodeType":"336","messageId":"337","endLine":22,"endColumn":57},{"ruleId":"334","severity":1,"message":"335","line":33,"column":35,"nodeType":"336","messageId":"337","endLine":33,"endColumn":37},{"ruleId":"334","severity":1,"message":"338","line":40,"column":87,"nodeType":"336","messageId":"337","endLine":40,"endColumn":89},{"ruleId":"334","severity":1,"message":"335","line":55,"column":44,"nodeType":"336","messageId":"337","endLine":55,"endColumn":46},{"ruleId":"334","severity":1,"message":"335","line":63,"column":45,"nodeType":"336","messageId":"337","endLine":63,"endColumn":47},{"ruleId":"322","severity":1,"message":"377","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":16},{"ruleId":"322","severity":1,"message":"378","line":2,"column":18,"nodeType":"324","messageId":"325","endLine":2,"endColumn":22},{"ruleId":"322","severity":1,"message":"379","line":2,"column":24,"nodeType":"324","messageId":"325","endLine":2,"endColumn":29},{"ruleId":"322","severity":1,"message":"357","line":2,"column":31,"nodeType":"324","messageId":"325","endLine":2,"endColumn":43},{"ruleId":"322","severity":1,"message":"353","line":3,"column":8,"nodeType":"324","messageId":"325","endLine":3,"endColumn":13},{"ruleId":"322","severity":1,"message":"377","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":16},{"ruleId":"322","severity":1,"message":"378","line":2,"column":18,"nodeType":"324","messageId":"325","endLine":2,"endColumn":22},{"ruleId":"322","severity":1,"message":"379","line":2,"column":24,"nodeType":"324","messageId":"325","endLine":2,"endColumn":29},{"ruleId":"322","severity":1,"message":"357","line":2,"column":31,"nodeType":"324","messageId":"325","endLine":2,"endColumn":43},{"ruleId":"322","severity":1,"message":"353","line":3,"column":8,"nodeType":"324","messageId":"325","endLine":3,"endColumn":13},{"ruleId":"322","severity":1,"message":"363","line":9,"column":11,"nodeType":"324","messageId":"325","endLine":9,"endColumn":18},{"ruleId":"322","severity":1,"message":"377","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":16},{"ruleId":"322","severity":1,"message":"378","line":2,"column":18,"nodeType":"324","messageId":"325","endLine":2,"endColumn":22},{"ruleId":"322","severity":1,"message":"379","line":2,"column":24,"nodeType":"324","messageId":"325","endLine":2,"endColumn":29},{"ruleId":"322","severity":1,"message":"357","line":2,"column":31,"nodeType":"324","messageId":"325","endLine":2,"endColumn":43},{"ruleId":"322","severity":1,"message":"353","line":3,"column":8,"nodeType":"324","messageId":"325","endLine":3,"endColumn":13},{"ruleId":"322","severity":1,"message":"363","line":9,"column":11,"nodeType":"324","messageId":"325","endLine":9,"endColumn":18},{"ruleId":"322","severity":1,"message":"377","line":2,"column":10,"nodeType":"324","messageId":"325","endLine":2,"endColumn":16},{"ruleId":"322","severity":1,"message":"378","line":2,"column":18,"nodeType":"324","messageId":"325","endLine":2,"endColumn":22},{"ruleId":"322","severity":1,"message":"379","line":2,"column":24,"nodeType":"324","messageId":"325","endLine":2,"endColumn":29},{"ruleId":"322","severity":1,"message":"357","line":2,"column":31,"nodeType":"324","messageId":"325","endLine":2,"endColumn":43},{"ruleId":"322","severity":1,"message":"353","line":3,"column":8,"nodeType":"324","messageId":"325","endLine":3,"endColumn":13},{"ruleId":"322","severity":1,"message":"363","line":9,"column":11,"nodeType":"324","messageId":"325","endLine":9,"endColumn":18},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'useState' is defined but never used.","'isLogged' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'IsLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["382"],"'signalr' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.gameRoomID'. Either include them or remove the dependency array.",["383"],"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","'textValue' is assigned a value but never used.","'setTextValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["384"],"'enterGame' is assigned a value but never used.","'tempId' is assigned a value but never used.","'createNewGame' is assigned a value but never used.","'useHistory' is defined but never used.","'InfoTwoTone' is defined but never used.","'axios' is defined but never used.","'Forum' is defined but never used.","'IconButton' is defined but never used.","'SportsKabaddi' is defined but never used.","'ErrorMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history.location.pathname', and 'location'. Either include them or remove the dependency array.",["385"],"'Alarm' is defined but never used.","'AlarmOnTwoTone' is defined but never used.","'isDataInvalid' is assigned a value but never used.","'history' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'gameID'. Either include it or remove the dependency array.",["386"],"'useDispatch' is defined but never used.","'handleCheckbox' is assigned a value but never used.","'AddFriend' is assigned a value but never used.","'string' is defined but never used.","'GameOnList' is defined but never used.","'NewGameModal' is defined but never used.","'renderSingle' is assigned a value but never used.","'eventTime' is assigned a value but never used.","'RssFeedTwoTone' is defined but never used.","'useEffect' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},"Update the dependencies array to be: [IsLoggedIn]",{"range":"397","text":"398"},"Update the dependencies array to be: [dispatch, props.match.params.gameRoomID]",{"range":"399","text":"400"},"Update the dependencies array to be: [location.state]",{"range":"401","text":"402"},"Update the dependencies array to be: [dispatch, history.location.pathname, loc, location]",{"range":"403","text":"404"},"Update the dependencies array to be: [gameID]",{"range":"405","text":"406"},[1575,1577],"[IsLoggedIn]",[2311,2313],"[dispatch, props.match.params.gameRoomID]",[1248,1250],"[location.state]",[1351,1356],"[dispatch, history.location.pathname, loc, location]",[4285,4287],"[gameID]"]